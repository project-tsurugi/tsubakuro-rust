name: Tsubakuro-Rust-CI

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      tsurugi_version:
        type: string
        default: 'snapshot'
      os_version:
        type: string
        default: 'ubuntu-22.04'
      tsurugi_loglevel:
        type: number
        default: 30

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    runs-on: [self-hosted, docker]
    permissions:
      checks: write
      contents: read
    timeout-minutes: 30
    container:
      image: ghcr.io/project-tsurugi/tsurugi-ci:${{ matrix.os }}
      volumes:
        - ${{ vars.gradle_cache_dir }}:/root/.gradle
    defaults:
      run:
        shell: bash
    env:
      DBTEST_ENDPOINT      : ${{ matrix.os == 'ubuntu-22.04' && 'tcp://localhost:12345' || 'tcp://tsurugi:12345' }}
      DBTEST_ENDPOINT_JAVA : ${{ matrix.os == 'ubuntu-22.04' && 'ipc:tsurugi' || 'tcp://tsurugi:12345' }}
      TSURUGI_HOME         : ${{ github.workspace }}/tsurugi
      GH_TOKEN             : ${{ github.token }}
      GLOG_v               : ${{ inputs.tsurugi_loglevel || 30 }}
      GLOG_logtostderr     : 1

    services:
      tsurugi:
        image: ghcr.io/project-tsurugi/tsurugidb:${{ inputs.tsurugi_version || 'snapshot' }}-${{ inputs.os_version || 'ubuntu-22.04' }}
        env:
          GLOG_v: ${{ inputs.tsurugi_loglevel || 30 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout_Tsubakuro
        uses: actions/checkout@v4
        with:
          repository: project-tsurugi/tsubakuro
          path: tsubakuro
          ref: master

      - name: Install_Tsurugidb_Local
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          RUN_ID=$(gh run list -R project-tsurugi/tsurugidb -b master -s success -w tsurugidb-CI -L 1 --json databaseId -q '.[].databaseId')
          gh run download ${RUN_ID} --repo project-tsurugi/tsurugidb --pattern binary-archive-${{ matrix.os }}
          tar xf binary-archive-${{ matrix.os }}/tsurugidb-bin-*.tar.gz

          sed -i '/\[stream_endpoint\]/,/^\[/{s/^\([[:space:]]*\)#enabled[[:space:]]*=[[:space:]]*false/\1enabled=true/}' tsurugi/var/etc/tsurugi.ini

      - name: Test_Core
        run: |
          cp -rp tsubakuro/modules/proto/src/main/protos tsubakuro-rust-core
          cd tsubakuro-rust-core
          cargo build
          cargo test

      - name: Test_DBTest
        run: |
          if [ -d ${TSURUGI_HOME} ]; then
            ${TSURUGI_HOME}/bin/tgctl start
          fi

          cd tsubakuro-rust-dbtest
          cargo run ${DBTEST_ENDPOINT}
          cargo test "" -- --test-threads=1 endpoint=${DBTEST_ENDPOINT}

          if [ -d ${TSURUGI_HOME} ]; then
            ${TSURUGI_HOME}/bin/tgctl shutdown
          fi

      - name: Build_FFI
        run: |
          cd tsubakuro-rust-ffi
          cargo build --release

      - name: Test_Java
        run: |
          if [ -d ${TSURUGI_HOME} ]; then
            ${TSURUGI_HOME}/bin/tgctl start
          fi

          cd tsubakuro-rust-java
          ./gradlew test -Pffi.library.path=${GITHUB_WORKSPACE}/tsubakuro-rust-ffi/target/release/libtsubakuro_rust_ffi.so -Pdbtest.endpoint=${DBTEST_ENDPOINT} -Pdbtest.endpoint.java=${DBTEST_ENDPOINT_JAVA}

          if [ -d ${TSURUGI_HOME} ]; then
            ${TSURUGI_HOME}/bin/tgctl shutdown
          fi

      - name: Lint_Core
        run: |
          cd tsubakuro-rust-core
          cargo clippy

      - name: Lint_FFI
        run: |
          cd tsubakuro-rust-ffi
          cargo clippy

      - name: Publish_Core
        if: matrix.os == 'ubuntu-22.04' && github.repository_owner == 'project-tsurugi' && contains(github.ref, '/tags/')
        run: |
          cd tsubakuro-rust-core
          cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO }}
